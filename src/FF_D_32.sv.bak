module FF_D_32
#(
	parameter WIDTH = 32
)
(
	input logic [WIDTH-1:0]			data, 
	input bit 							clk, rst, 
	input 		[WIDTH-1:0] 		and_i2,
	input 								and_i1,
	output 		[WD-1:0][WD-1:0] 	q
);

logic [WD-1:0] and_o;

genvar i;
generate
	for (i=0; i<32; i++) begin:	
		FF_D FF_D_32(
			.d(data),
			.clk(clk),
			.reset(reset),
			.enable(and_o[i]),
			.q(q[i])
		);
		
		and(
			and_o[i],
			and_i1,
			and_i2[i]
		);
	end
endgenerate

endmodule
